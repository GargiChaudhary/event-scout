# noinspection GraphQLUnresolvedReference
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar BigInt @scalar(class: "MLL\\GraphQLScalars\\BigInt")

extend type Query {
    user(
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
        email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    users(
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)
}

extend type Mutation{
    insertUser(input: createUser! @spread): User! @field(resolver: "App\\GraphQL\\Mutations\\User\\CreateUser")
    updateUser(input: updateUser! @spread): User! @guard @field(resolver: "App\\GraphQL\\Mutations\\User\\UpdateUser")
    deleteUser(id: ID! @whereKey): User @delete(model: "App\\Models\\User")

    "Log in to a new session and get the user."
    login(email: String!, password: String!): User! @field(resolver: "App\\GraphQL\\Mutations\\Login")

    "Log out from the current session, showing the user one last time."
    logout: LogoutResult @field(resolver: "App\\GraphQL\\Mutations\\User\\Logout") @guard
}

type LogoutResult {
    success: Boolean!
    message: String
}

"Account of a person who utilizes this application."
type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime!
    password: String!
    bio: String!
    profile_image: String!
    country_code: Int!
    mobile: BigInt!
    createdIp: String!
    verified: String!
    otp: Int!
    invalidOtp: Int!
    lockTimeRetry: Int!
    otpRequest: Int!
    lockTimeRequest: Int!
    accessToken: String!
    created_at: FormattedDate!
    updated_at: FormattedDate!
}

input createUser {
    name: String!
    email: String!
    bio: String!
    profile_image: String!
    password: String!
    password_confirmation: String!
    mobile: BigInt!
}

input updateUser {
    id: ID!
    name: String!
    email: String!
    bio: String!
    profile_image: String!
    password: String
    password_confirmation: String
    mobile: BigInt!
}